{"version":3,"sources":["../../stateful/lib/hooks/timeout.js","../../stateful/lib/hooks/did-mount.js","../../stateful/lib/hooks/will-unmount.js","components/AnimatedLogo/Hex.js","components/AnimatedLogo/Logo.js","components/LoadingOverlay/LoadingOverlay.js","components/LoadingOverlay/index.js","App.scss","components/LoadingOverlay/LoadingOverlay.scss","components/AnimatedLogo/Logo.scss","App.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","default","func","delay","arguments","length","undefined","_useState2","arr","_react","useState","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","isPending","setPending","useEffect","timeoutID","window","setTimeout","clearTimeout","clear","start","__webpack_require__","ratio","Math","sqrt","Hex","_ref","className","_ref$size","size","hexPoints","x","y","points","sin","PI","cos","map","p","concat","join","react_default","a","createElement","cx","width","height","style","position","left","Logo","_ref$animated","animated","_ref$scale","scale","props","objectWithoutProperties","assign","css","transform","Rotator","AnimatedLogo_Hex","_ref2","children","LoadingOverlay","_ref$delay","_React$useState","React","_React$useState2","slicedToArray","visible","setVisible","timer","useTimeout","useDidMount","useWillUnmount","d","__webpack_exports__","components_LoadingOverlay_LoadingOverlay","module","App","AppHeader","lazy","Promise","all","e","then","bind","AppMenu","AppContent","menuVisible","setMenuVisible","Suspense","fallback","HashRouter","basename","process","onShowMenu","onHideMenu","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","placeholder","querySelector","parentNode","removeChild"],"mappings":"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","file":"static/js/main.f2793171.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTimeout;\n\nvar _react = require(\"react\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction useTimeout(func) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPending = _useState2[0],\n      setPending = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    if (isPending) {\n      var timeoutID = window.setTimeout(func, delay);\n      return function () {\n        window.clearTimeout(timeoutID);\n      };\n    }\n  }, [isPending]);\n  return {\n    clear: function clear() {\n      return setPending(false);\n    },\n    start: function start() {\n      return setPending(true);\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useDidMount;\n\nvar _react = require(\"react\");\n\nfunction useDidMount(func) {\n  (0, _react.useEffect)(function () {\n    return typeof func === 'function' && func();\n  }, []);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWillUnmount;\n\nvar _react = require(\"react\");\n\nfunction useWillUnmount(func) {\n  (0, _react.useEffect)(function () {\n    return func;\n  }, []);\n}","import React from 'react';\n\nimport cx from 'classnames';\n\nconst ratio = Math.sqrt(3) / 2;\n\nconst Hex = ({ className, size = 100 }) => {\n    function hexPoints(size) {\n        let x = size;\n        let y = size;\n\n        const points = [];\n\n        for (let i = 0; i < 7; i++) {\n            points.push({\n                x: x + size * Math.sin((i * 2 * Math.PI) / 6),\n                y: y + size * Math.cos((i * 2 * Math.PI) / 6)\n            });\n        }\n\n        return points.map(p => `${p.x},${p.y}`).join(' ');\n    }\n    return (\n        <div className={cx('Hex', className)}>\n            <svg\n                width={size}\n                height={size}\n                style={{\n                    position: 'relative',\n                    left: -(size - size * ratio) * 0.5\n                }}\n            >\n                <polyline className=\"border\" points={hexPoints(size / 2)} />\n                <polyline\n                    className=\"fill\"\n                    points={hexPoints((size / 2) * 0.8)}\n                />\n            </svg>\n        </div>\n    );\n};\n\nexport default Hex;\n","import React from 'react';\n\nimport cx from 'classnames';\nimport css from './Logo.scss';\nimport Hex from './Hex';\n\n// complicated solution for an animated logo using lots of nested divs and and lots of CSS\n// TODO: just code the damn thing using javascript and some basic trigonometry - shouldn't be too hard.\n\nexport default function Logo({\n    className,\n    animated = true,\n    scale = 1,\n    ...props\n}) {\n    return (\n        <div\n            {...props}\n            className={cx('Logo', css.Logo, className, { animated })}\n        >\n            <div\n                className={'Logo-outer'}\n                style={{ transform: `scale(${scale})` }}\n            >\n                <div className={cx('Logo-inner')}>\n                    <Rotator className={cx('rotator-1')}>\n                        <Hex size={50} className=\"hex\" />\n                    </Rotator>\n\n                    <Rotator className={cx('rotator-2')}>\n                        <Hex size={50} className=\"hex\" />\n                    </Rotator>\n\n                    <Rotator className={cx('rotator-3')}>\n                        <Hex size={50} className=\"hex\" />\n                    </Rotator>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Rotator({ children, className }) {\n    return (\n        <div className={cx('rotator', className)}>\n            <div className=\"center-outer\">\n                <div className=\"center-inner\">\n                    <div className=\"rotation rotation-outer\">\n                        <div className=\"position\">\n                            <div className=\"rotation rotation-inner\">\n                                {children}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport cx from 'classnames';\nimport css from './LoadingOverlay.scss';\n\nimport AnimatedLogo from 'components/AnimatedLogo';\n\nimport useTimeout from '@loopmode/stateful/lib/hooks/timeout';\nimport useDidMount from '@loopmode/stateful/lib/hooks/did-mount';\nimport useWillUnmount from '@loopmode/stateful/lib/hooks/will-unmount';\n\nconst LoadingOverlay = ({ delay = 500 }) => {\n    const [visible, setVisible] = React.useState(false);\n\n    const timer = useTimeout(() => setVisible(true), delay);\n    useDidMount(() => timer.start());\n    useWillUnmount(() => timer.clear());\n\n    return (\n        <div className={cx('LoadingOverlay', css.LoadingOverlay, { visible })}>\n            <div>\n                <AnimatedLogo scale={0.5} />\n            </div>\n        </div>\n    );\n};\nexport default LoadingOverlay;\n","export { default } from './LoadingOverlay';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3jQ0wgPc3Hj0LizMGGPFst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingOverlay\":\"_1bsLSxnrI7nxMEd4qgJXTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_2oQX3DbzsNO2mr84MVOq-O\"};","import React from 'react';\nimport cx from 'classnames';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport css from './App.scss';\n\nimport LoadingOverlay from 'components/LoadingOverlay';\n\nconst AppHeader = React.lazy(() =>\n    import(/* webpackChunkName: 'components/AppHeader' */ 'components/AppHeader')\n);\nconst AppMenu = React.lazy(() =>\n    import(/* webpackChunkName: 'components/AppMenu' */ 'components/AppMenu')\n);\nconst AppContent = React.lazy(() =>\n    import(/* webpackChunkName: 'components/AppContent' */ 'components/AppContent')\n);\n\nconst App = () => {\n    // the menu is hidden on mobile via CSS, and we force-open it when menu icon is clicked\n    const [menuVisible, setMenuVisible] = React.useState(false);\n    const showMenu = () => setMenuVisible(true);\n    const hideMenu = () => setMenuVisible(false);\n\n    return (\n        <React.Suspense fallback={<LoadingOverlay />}>\n            <Router basename={process.env.REACT_APP_BASENAME}>\n                <div className={cx('App', css.App)}>\n                    <AppHeader onShowMenu={showMenu} />\n                    <div className=\"App--body\">\n                        <AppMenu\n                            onHideMenu={hideMenu}\n                            menuVisible={menuVisible}\n                        />\n                        <AppContent />\n                    </div>\n                </div>\n            </Router>\n        </React.Suspense>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst placeholder = document.querySelector('.content-placeholder');\nif (placeholder) {\n    placeholder.parentNode.removeChild(placeholder);\n}\n"],"sourceRoot":""}